<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cindy&#39;s Blog</title>
    <link>http://xmxiaohuilin.github.io/</link>
    <description>Recent content on Cindy&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>(c) 2015 Cindy Lin.</copyright>
    <lastBuildDate>Sat, 10 Sep 2016 17:22:36 -0700</lastBuildDate>
    <atom:link href="http://xmxiaohuilin.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>About Me</title>
      <link>http://xmxiaohuilin.github.io/about/</link>
      <pubDate>Sat, 10 Sep 2016 17:22:36 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/about/</guid>
      <description>

&lt;h4 id=&#34;cindy-lin&#34;&gt;Cindy Lin&lt;/h4&gt;

&lt;h4 id=&#34;objective&#34;&gt;Objective&lt;/h4&gt;

&lt;p&gt;Software Engineer position in Seattle or Bay Area&lt;/p&gt;

&lt;h4 id=&#34;interests&#34;&gt;Interests&lt;/h4&gt;

&lt;p&gt;Web Development, Information Retrieval, Machine Learning&lt;/p&gt;

&lt;h4 id=&#34;techniques&#34;&gt;Techniques&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;JAVA: Servlet, Spring MVC, Hibernate, JMS, Eclipse&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;JAVASCRIPT: ES6, Node.js, Angular2, Mocha, WebStorm&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;OTHER LANG: Python, PHP&lt;/li&gt;
&lt;li&gt;Database: MySQL, MongoDB&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Big Data: Lucene, Elasticsearch, Redis, Kafka, Celery, Spark&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Cloud: Azure, AWS&lt;/li&gt;
&lt;li&gt;Dev Tool: Git, Jenkins, Docker, ELK&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Web: HTML5/CSS3, Bootstrap, KSS, SASS&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Team Work: Agile, Scrum, Trello&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;work-experience&#34;&gt;Work Experience&lt;/h4&gt;

&lt;h5 id=&#34;software-engineer-at-jobsonic-com-1for-one-corp-feb-sep-2016-san-jose-california&#34;&gt;Software Engineer at JobSonic.com (1for One Corp) &amp;mdash;&amp;mdash;&amp;mdash; Feb - Sep 2016 &amp;mdash;&amp;mdash;&amp;mdash; San Jose, California&lt;/h5&gt;

&lt;h6 id=&#34;a-job-search-platform-with-machine-learning-gap-analysis-and-real-time-personalized-analytics&#34;&gt;A Job Search Platform with Machine Learning, Gap Analysis, and real-time Personalized Analytics.&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;Worked on 8-people developer team with Agile Scrum and responsible for full-stack development by using Node.js and Angular2.&lt;/li&gt;
&lt;li&gt;Build both Node.js API modules and Angular2 components for job seeker/recruiter’s machine learning calibration and prediction.&lt;/li&gt;
&lt;li&gt;Wrote advanced ElasticSearch queries to identify the right results sorted by relevance.&lt;/li&gt;
&lt;li&gt;Build both Node.js API modules and Angular2 components for job applications/candidates management.&lt;/li&gt;
&lt;li&gt;Build Node.js wrapper service for MongoDB, ElasticSearch, Celery, Kafka.&lt;/li&gt;
&lt;li&gt;Documented API with JSDoc and Angular2 with Typedoc and Implemented living API endpoint documentation with Swagger.&lt;/li&gt;
&lt;li&gt;Created living CSS style guide using KSS and implemented custom UI components using Angular2 and SASS.&lt;/li&gt;
&lt;li&gt;Helped analytics team build Spark Streaming platform for real-time machine learning (a classification model for each user) to match&lt;br /&gt;
candidate/job with Kafka and Elasticsearch.&lt;/li&gt;
&lt;li&gt;Helped analytics team build a crawler service to download 100k job postings per day and digest data (200k companies, 400k job titles)&lt;/li&gt;
&lt;li&gt;Implemented semantic git commit practice using commitizen to ensure a clean git tree and easy change log generation.&lt;/li&gt;
&lt;li&gt;Test Driven Development by wrote unit tests using Mocha and used Docker for building and running service, Jenkins for automation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;software-engineer-intern-at-china-yonyou-tobacco-software-co-ltd-summer-2013-xiamen-china&#34;&gt;Software Engineer Intern at China Yonyou Tobacco Software Co., Ltd &amp;mdash;&amp;mdash;&amp;mdash; Summer 2013  &amp;mdash;&amp;mdash;&amp;mdash; Xiamen, China&lt;/h5&gt;

&lt;h6 id=&#34;custom-tailor-uap-nc-erp-platform-for-china-tobacco-hunan-industrial-co-ltd&#34;&gt;Custom-tailor UAP-NC ERP Platform for China Tobacco Hunan Industrial Co., Ltd&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;Worked on customer information management module with 5-people team;&lt;/li&gt;
&lt;li&gt;Responsible for full-stack development (SpringMVC, Hibernate, JavaScript, jQuery) development;&lt;/li&gt;
&lt;li&gt;Applied session, privilege control, and SQL injection prevention to the system;
Web Developer Intern, China Construction Bank Corp., Limited (CCB), Xiamen                   Summer 2012
Counter system of China Construction Banking Corp., Ltd. Xiamen Branch (Payment Module)&lt;/li&gt;
&lt;li&gt;Worked on building the counter system (Payment Module) of China Construction Banking Corp., Ltd. Xiamen Branch;
Responsible for both the front-end (HTML/CSS, JavaScript) and back-end (SSH) development;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;education&#34;&gt;Education&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;2015 University of Pittsburgh, Masters of Information Science&lt;/li&gt;
&lt;li&gt;2013 Tianjin Polytechnic University, Bachelor of Information Management and Information System&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;summary&#34;&gt;Summary&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Accumulated around five years of programming experience from my academic coursework and work experiences.&lt;/li&gt;
&lt;li&gt;Acquired strong algorithm, data structure knowledge, and multiple programming languages. (Java, JavaScript and etc.)&lt;/li&gt;
&lt;li&gt;Studied Machine Learning/Data Mining, Search Engine Algorithm and Cloud Computing techs at graduate school.&lt;/li&gt;
&lt;li&gt;Had work experience on full-stack development and machine learning algorithm.&lt;/li&gt;
&lt;li&gt;Worked on engineering team in early-stage startup and finished their MVP.&lt;/li&gt;
&lt;li&gt;Adept at full stack web application development with Java framework (Spring, Hibernate) or JavaScript framework (Node.js, Angular.js) and SQL database or Mongo DB.&lt;/li&gt;
&lt;li&gt;Have a natural affinity towards cutting-edge technology on big data area.&lt;/li&gt;
&lt;li&gt;Learning more about full-stack development integrate with intelligent algorithm.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Minimum Maximum Path</title>
      <link>http://xmxiaohuilin.github.io/2015/12/08/minimum-maximum-path/</link>
      <pubDate>Tue, 08 Dec 2015 22:43:13 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/2015/12/08/minimum-maximum-path/</guid>
      <description>

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class MaxMin {
    //private static int maxMin = Integer.MIN_VALUE;
    
    public static int maxMin(int[][] matrix) {
        int[] res = new int[1];
        res[0] = Integer.MIN_VALUE;
        dfs(matrix, 0, 0, Integer.MAX_VALUE, res);
        return res[0];
    }
    
    private static void dfs(int[][] matrix, int i, int j, int curMin, int[] res) {
        if (i == matrix.length || j == matrix[0].length) {
            return;
        }
        curMin = Math.min(curMin, matrix[i][j]);
        if (i == matrix.length - 1 &amp;amp;&amp;amp; j == matrix[0].length - 1) {
            res[0] = Math.max(res[0], curMin);
        }
        dfs(matrix, i + 1, j, curMin, res);
        dfs(matrix, i, j + 1, curMin, res);
    }
    
    public static void main(String[] args) {
        int[][] matrix = {{3,4,3},{2,3,4},{4,5,6}};
        int[][] matrix2 = {{8, 4, 7},{6, 5, 9}};
        System.out.println(maxMin(matrix2));
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Search Matrix</title>
      <link>http://xmxiaohuilin.github.io/2015/12/08/search-matrix/</link>
      <pubDate>Tue, 08 Dec 2015 22:43:13 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/2015/12/08/search-matrix/</guid>
      <description>

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class SearchMatrix {
	public static int search(int[][] matrix, int target) {
		if (matrix == null || matrix.length == 0 || matrix[0].length == 0) {
			return 0;
		}
		int count = 0;
		int i = 0, j = matrix[0].length - 1;
		while (i &amp;lt; matrix.length &amp;amp;&amp;amp; j &amp;gt;= 0) {
			if (matrix[i][j] == target) {
				count++;
				i++;
				j--;
			} else if (matrix[i][j] &amp;gt; target) {
				j--;
			} else {
				i++;
			}
		}
		return count;
	}
	
	public static void main(String[] args) {
		int[][] matrix = {{1, 2, 3, 4},{2, 3, 4, 7},{4, 5, 6, 8}};
		System.out.println(search(matrix, 4));
	}
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Two Sum Cloeset</title>
      <link>http://xmxiaohuilin.github.io/2015/12/08/two-sum-cloeset/</link>
      <pubDate>Tue, 08 Dec 2015 22:43:13 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/2015/12/08/two-sum-cloeset/</guid>
      <description>

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class TwoSumClosest {
    static class Container {
        public double first;
        public double second;
    }
    public static Container findOptimalWeight(double[] weight, double capacity) {
        Container res = new Container();
        if (weight == null || weight.length == 0) {
            return res;
        }
        
        Arrays.sort(weight);
        int l = 0, r = weight.length - 1;
        double closest = Integer.MAX_VALUE;
        while (l &amp;lt; r) {
            if (weight[l] + weight[r] == capacity) {
                res.first = weight[l];
                res.second = weight[r];
                return res;
            }
            double diff = capacity - weight[l] - weight[r];
            if (diff &amp;gt; 0 &amp;amp;&amp;amp; diff &amp;lt; closest) {
                closest = diff;
                res.first = weight[l];
                res.second = weight[r];
            }
            if (weight[l] + weight[r] &amp;gt; capacity) {
                r--;
            } else {
                l++;
            }
        }
        
        return res;
    }
    
    public static void main(String[] args) {
        double[] weight = {1.0, 1.5, 7.0, 2.8, 4.8, 1.6, 9.1};
        Container res = findOptimalWeight(weight, 7.0);
        System.out.println(res.first);
        System.out.println(res.second);
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Windows Minimum</title>
      <link>http://xmxiaohuilin.github.io/2015/12/08/windows-minimum/</link>
      <pubDate>Tue, 08 Dec 2015 22:43:13 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/2015/12/08/windows-minimum/</guid>
      <description>

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class WindowMin {
	public static List&amp;lt;Integer&amp;gt; windowMin3(ArrayList&amp;lt;Integer&amp;gt; list, int w) {
		List&amp;lt;Integer&amp;gt; res = new ArrayList&amp;lt;&amp;gt;();
		if (list == null || list.size() &amp;lt; w || w &amp;lt;= 0) {
			return res;
		}
		
		Deque&amp;lt;Integer&amp;gt; deque = new ArrayDeque&amp;lt;&amp;gt;();
		
		for (int i = 0; i &amp;lt; list.size(); i++) {
			while (!deque.isEmpty() &amp;amp;&amp;amp; deque.peek() &amp;lt;= i - w) {
				deque.poll();
			}
			while (!deque.isEmpty() &amp;amp;&amp;amp; list.get(deque.peekLast()) &amp;gt; list.get(i)) {
				deque.pollLast();
			}
			deque.offer(i);
			if (i &amp;gt;= w - 1) {
				res.add(list.get(deque.peek()));
			}
		}
		
		return res;
	}
	
	public static void main(String[] args) {
		ArrayList&amp;lt;Integer&amp;gt; list = new ArrayList&amp;lt;&amp;gt;();
		list.add(6);
		list.add(2);
		list.add(3);
		list.add(1);
		list.add(1);
		list.add(4);
		list.add(2);
		System.out.println(windowMin3(list, 3));
	}
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Apache and PHP Configuration and some shell scripts</title>
      <link>http://xmxiaohuilin.github.io/code/Apache/</link>
      <pubDate>Tue, 24 Nov 2015 22:56:15 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/code/Apache/</guid>
      <description>

&lt;p&gt;This document is for the technical operations assignment. The assignment mainly target to achieve the apache httpd and PHP configuration on AWS. There are some bash scripts practices also required in this assignment.&lt;/p&gt;

&lt;h2 id=&#34;task-1&#34;&gt;Task 1:&lt;/h2&gt;

&lt;h3 id=&#34;install-apache-server-httpd-and-open-ssl&#34;&gt;Install Apache Server (httpd) and Open SSL:&lt;/h3&gt;

&lt;p&gt;Access AWS:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ssh root@ec2-54-145-34-67.compute-1.amazonaws.com 
# Enter your password
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Download Apache HTTPD&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd /home/root/

wget http://apache.osuosl.org/httpd/httpd-2.2.31.tar.gz

mkdir apache-2.2

mv httpd-2.2.31.tar.gz apache-2.2

cd apache-2.2

tar -xzvf httpd-2.2.31.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Download and install open ssl so that apache can achieve the https visiting&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;wget ftp://ftp.openssl.org/source/openssl-0.9.8zd.tar.gz

tar -zxvf openssl-0.9.8zd.tar.gz

# Please config with -fPIC otherwise it may takes error during httpd
./config -fPIC no-gost no-shared no-zlib

make
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configuration-on-both-httpd-and-open-ssl-certificates&#34;&gt;Configuration on both HTTPD and Open SSL Certificates&lt;/h3&gt;

&lt;p&gt;Configure and install the HTTPD&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd /home/root/apache-2.2/httpd-2.2.31

# Configure Apache to be installed into your home directory
# Sometime it may show some errors like: `no acceptable C compiler found in $Path`
# Please check gcc package installed! 
# make agrs: --enable-so --enable-modules=all --enable-mods-shared=all so that it can dynamic load modules for SSL and php
./configure --prefix=/home/root/apache-2.2 --enable-so --enable-modules=all --enable-mods-shared=all --enable-ssl=shared --with-ssl=/usr/local/ssl 

make
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate Open SSL Key and Certificates&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# enter the openssl directory
cd /usr/local/ssl/bin

#Generate private key   
openssl genrsa -out server.key 2048   

#Generate CSR Certificate Signing Request   
openssl req -new -key server.key -out server.csr  

#Generate Self Signed Certificate  
openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt  

# Copy all generated certificates and keys into directory under apache
cp server.key   /home/root/apache-2.2/conf/
cp server.csr   /home/root/apache-2.2/conf/
cp server.crt   /home/root/apache-2.2/conf/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Configure the ssl.conf for httpd&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nano /home/root/apache-2.2/conf/extra/httpd-ssl.conf

# Modify following 
SSLCertificateFile conf/server.key            # configure the certificate of server
SSLCertificateKeyFile conf/server.csr        # configure the private key 
#SSLCertificateChainFile conf/server.crt     # remove&#39;#&#39;

# Configure the httpd.conf - the global httpd configuration file
nano /home/root/apache-2.2/conf/httpd.conf

# Configure Apache to listen on both port 81 AND 82 simultaneously
# Listen 81 # remove&#39;#&#39;
# Listen 82 # remove&#39;#&#39;
# Include conf/extra/httpd-ssl.conf #remove&#39;#&#39;

# Check the configuration and run the apache server
cd /home/root/apache-2.2/bin
./apachectl configtest
./apachectl -k start

# Verify that Apache is listening on both port 81 AND 82 AND HTTPS/443
curl http://localhost:81
# It will show this:
&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;It works!&amp;lt;/h1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;
curl http://localhost:82
curl --cacert &amp;quot;/usr/local/ssl/bin/server.crt&amp;quot; https://localhost
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;task-2&#34;&gt;Task 2:&lt;/h2&gt;

&lt;h3 id=&#34;get-php-installed&#34;&gt;Get PHP installed&lt;/h3&gt;

&lt;p&gt;The prerequisite (libxml2) for php install&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir php
cd php

wget http://xmlsoft.org/sources/libxml2-2.9.1.tar.gz
tar zxvf libxml2-2.9.1.tar.gz 
 cd libxml2-2.9.1.
 # --with-python=no for sometime the error occured when install
  ./configure --prefix=/usr/local/libxml2 --with-python=no
 make
 # make clean  # when some error occur
 make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install and Configuration on PHP&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;wget  http://us2.php.net/get/php-5.4.45.tar.gz/from/this/mirror
tar zxvf php-5.4.45
cd php-5.4.45

# Configure php install with pointing the root path of httpd and php and also the libxml2
./configure --with-apxs2=/home/root/apache-2.2/bin/apxs --prefix=/home/root/apache-2.2/php --with-config-file-path=/home/root/apache-2.2/php --with-libxml-dir=/usr/local/libxml2

# Move php.ini into the php path
cd /home/root/php/php-5.4.45
mv php.ini-development php.ini.dist
cp php.ini.dist /home/root/apache-2.2/php/bin/php.ini 


# Add the following two lines in httpd.conf
AddType application/x-httpd-php .php 
AddType application/x-httpd-php-source .phps   

# Make sure you have this line in httpd.conf
LoadModule php5_module        modules/libphp5.so

cd /home/root/apache-2.2/bin
./apachectl stop
./apachectl start
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;write-and-test-following-into-helloworld-php&#34;&gt;Write and Test following into &amp;lsquo;helloworld.php&amp;rsquo;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nano /home/root/apache-2.2/htdocs/helloworld.php

# Write down following into helloworld.php
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;PHP Test&amp;lt;/title&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;?php echo &#39;&amp;lt;p&amp;gt;Hello World&amp;lt;/p&amp;gt;&#39;; ?&amp;gt; 
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

# Test
curl localhost:81/helloworld.php

#Output
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;PHP Test&amp;lt;/title&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;p&amp;gt;Hello World&amp;lt;/p&amp;gt; 
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;task-3&#34;&gt;Task 3:&lt;/h2&gt;

&lt;h3 id=&#34;task-3a-prompt-for-your-name-and-print-it-out-by-write-following-script&#34;&gt;Task 3A: Prompt for your name and print it out by write following script:&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;name=&#39;Rui Bi&#39;
echo $name
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;task-3b-print-out-the-current-date-five-times-with-a-minute-pause-between-each-print&#34;&gt;Task 3B: Print out the current date five times, with a minute pause between each print.&lt;/h3&gt;

&lt;p&gt;By write following script:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;for ((i=0;$i&amp;lt;5;i++))
 do
 date
 sleep 60
 done
echo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;task-3c-count-the-number-of-processes-running-as-root&#34;&gt;Task 3C: Count the number of processes running as &amp;ldquo;&amp;ldquo;root&amp;rdquo;&amp;rdquo;&lt;/h3&gt;

&lt;p&gt;By write following script:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;count=`ps -u root | wc  -l`
echo $count
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;task-3d-every-minute-you-should-print-out-the-following&#34;&gt;Task 3D: Every minute, you should print out the following&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The total number of processes running as root.  If this is above 25, print out a warning message.&lt;/li&gt;
&lt;li&gt;The percentage of disk used.  If this is above 80%, print out a warning message.&lt;/li&gt;
&lt;li&gt;The amount of free memory, if this number gets below 100mb, print out a warning message.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;write-a-shell-script-systemmonitor-sh-which-is-storing-in-directory-home-root-as-following&#34;&gt;Write a shell script &lt;code&gt;SystemMonitor.sh&lt;/code&gt; which is storing in directory &lt;code&gt;/home/root/&lt;/code&gt;, as following:&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;psCnt=`ps -u root | wc  -l`
diskUsg=`df / | awk &#39;END{print $5}&#39; | cut -f 1 -d &amp;quot;%&amp;quot;`
freeMem=`free -m | grep Mem | awk &#39;{print $4}&#39;`
 
if (($psCnt &amp;gt; 25)); then
 echo &amp;quot;Warning: current process amount is &amp;quot;$psCnt
fi

if ((diskUsg &amp;gt; 80)); then
 echo &amp;quot;Warning: current disk Usage exceeded 80%&amp;quot;
fi

if (($freeMem &amp;lt; 100)); then
 echo &amp;quot;Warning: current free Memory less than 100MB&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;setup-crontab-by-following-command-and-output-the-result-in-home-root-monitor-output-file&#34;&gt;Setup &lt;code&gt;crontab&lt;/code&gt; by following command and output the result in &lt;code&gt;/home/root/monitor_output.file&lt;/code&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;crontab -e
*/1 * * * * /home/root/SystemMonitor.sh &amp;gt;&amp;gt; /home/root/monitor_output.file &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;task-3e-create-a-crontab-that-will-execute-every-5-minutes-that-will-log-the-last-4-ip-addresses-that-accessed-your-website&#34;&gt;Task 3E: Create a crontab that will execute every 5 minutes that will log the last 4 IP addresses that accessed your website.&lt;/h3&gt;

&lt;h4 id=&#34;for-this-task-we-have-to-check-the-httpd-access-log-which-is-located-in-home-root-apache-2-2-logs-access-log&#34;&gt;For this task, we have to check the httpd access log which is located in &lt;code&gt;/home/root/apache-2.2/logs/access-log&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Here I use &lt;code&gt;cat&lt;/code&gt; command and output the result to the &lt;code&gt;/home/root/ip_output.file&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;write-a-shell-script-ip-monitor-sh&#34;&gt;Write a shell script &lt;code&gt;ip_monitor.sh&lt;/code&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;echo `date` &amp;gt;&amp;gt; /home/root/ip_output.file

# Get recent 4 ip access means the last 4 ip in access_log
cat /home/root/apache-2.2/logs/access_log |cut -d &#39; &#39; -f 1 | awk &#39;{print $0 }&#39; | tail -n 4 |less &amp;gt;&amp;gt; /home/root/ip_output.file

# for first 5 frequent visit use this:
# /home/root/apache-2.2/logs/access_log |cut -d &#39; &#39; -f 1 |sort |uniq -c | sort -nr | awk &#39;{print $0 }&#39; | head -n 5 |less
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;make-the-ip-access-log-monitor-as-a-crontab-task-with-every-5-minutes-run&#34;&gt;Make the ip access log monitor as a &lt;code&gt;crontab&lt;/code&gt; task with every 5 minutes run.&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;crontab -e
*/5 * * * * /home/root/ip_monitor.sh
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Few questions from Old Version</title>
      <link>http://xmxiaohuilin.github.io/2015/11/20/few-questions-from-old-version/</link>
      <pubDate>Fri, 20 Nov 2015 22:43:13 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/2015/11/20/few-questions-from-old-version/</guid>
      <description>

&lt;h2 id=&#34;probelam-i-grey-code&#34;&gt;Probelam I: Grey Code&lt;/h2&gt;

&lt;p&gt;Given 2 numbers. Find if they are consecutive gray (grey) code sequences. In grey code sequence, two succesive values differ in only one bit.&lt;/p&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
	public int greyCode(byte term1, byte term2) {
		// use XOR to find the difference between two numbers
		byte x = (byte)(term1 ^ term2);
		// check how many 1s left in XOR result.
		int total = 0;
		while(x != 0){
			total += (x&amp;amp;1);
			x &amp;gt;&amp;gt;= 1;
		}

		if(total == 1) 
			return 1; 
		else 
			return 0;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;probelam-ii-remove-vowels&#34;&gt;Probelam II: Remove Vowels&lt;/h2&gt;

&lt;h2 id=&#34;solution-1&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
	public String removeVowel(String str) {
		if(str == null || str.length == 0)
			return str;
		StringBuffer sb = new StringBuffer();
		String dict = &amp;quot;aeiouAEIOU&amp;quot;;
		for(int i = 0; i &amp;lt; str.length(); i++){
			if(dict.indexOf(str.charAt(i)) &amp;gt; -1)
		 		continue;
			sb.append(str.charAt(i));
		}
		return sb.toStirng();
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;problem-iii&#34;&gt;Problem III:&lt;/h2&gt;

&lt;p&gt;String rotation (if string is the rotate of the other)&lt;/p&gt;

&lt;h2 id=&#34;solution-2&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
	public boolean isRotation(String s1,String s2) {  
	    if(s1 == null || s2 == null)
      		return false;
    	if(s1.length() != s2.length())
      		return false;
    	return (s1 + s1).indexOf(s2) != -1;
	}
} 
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Insert Node for Circular Linked List</title>
      <link>http://xmxiaohuilin.github.io/2015/11/19/insert-node-for-circular-linked-list/</link>
      <pubDate>Thu, 19 Nov 2015 20:33:13 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/2015/11/19/insert-node-for-circular-linked-list/</guid>
      <description>

&lt;p&gt;Write a function to insert a new node in a sorted Circular Linked List (CLL). For example, if the input CLL is following.&lt;/p&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
	/**
	* Insert a node into a linked list with cycle
	* @param node: one of node in linked list
	* @param insert: the node for inserting
	* @return newNode which is newly inserted node
	**/
	public static ListNode insertList (ListNode node, int insert) {
		ListNode newNode = new ListNode(insert);
		// egde case
		if(node == null) {
			newNode.next = newNode;
			return newNode;
		}
		
		ListNode origin = node;
		// find the insert place with iterate through the list
		do {
			if(node.val &amp;lt;= insert.val &amp;amp;&amp;amp; insert.val &amp;lt;= node.next.val)
				break;
			node = node.next;
		} while(node != origin);

		newNode.next = node.next;
		node.next = newNode;
		return newNode;
	}
}

class ListNode{
	int val;
	ListNode next;
	public ListNode(int val) {
		this.val = val;
	}
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Longest Palindromic Substring</title>
      <link>http://xmxiaohuilin.github.io/2015/11/19/longest-palindromic-substring/</link>
      <pubDate>Thu, 19 Nov 2015 14:43:13 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/2015/11/19/longest-palindromic-substring/</guid>
      <description>

&lt;p&gt;Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.&lt;/p&gt;

&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;

&lt;p&gt;Given the string = &lt;code&gt;&amp;quot;abcdzdcab&amp;quot;&lt;/code&gt;, return &lt;code&gt;&amp;quot;cdzdc&amp;quot;&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;challenge&#34;&gt;Challenge&lt;/h3&gt;

&lt;p&gt;O(n2) time is acceptable. Can you do it in O(n) time.&lt;/p&gt;

&lt;h2 id=&#34;think-2&#34;&gt;Think #2&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;One pass on each position in string characters, assume the axis of symmetry on each character or between two character:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    |                       |
c a b a c f     or     c a b a c f
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;On each axis of symmetry we get the left and right pointers and make them move toward left or right&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;left right           
   \ /                 
c a b a c f 

...or...        

    l r
    | |
c a b a c f
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution {
    /**
     * @param s input string
     * @return the longest palindromic substring
     */
    private String LongestPalindromeSubstringI(String str) {
        int maxLen = 0;
        String maxSubstr = &amp;quot;&amp;quot;;
        // memorized whether it is palindromical in str (i, j)
        boolean[][] memo = new boolean[str.length()][str.length()];
        for (int i = str.length() - 1; i &amp;gt;= 0; i--) {
            for (int j = i; j &amp;lt; str.length(); j++) {
                if ((j - i &amp;lt; 2 || memo[i + 1][j - 1])
                        &amp;amp;&amp;amp; str.charAt(i) == str.charAt(j)) {
                    memo[i][j] = true;
                    if (j - i + 1 &amp;gt; maxLen) {
                        maxSubstr = str.substring(i, j + 1);
                        maxLen = j - i + 1;
                    }
                }
            }
        }
        return maxSubstr;
    }

    private String LongestPalindromeSubstringII(String str) {
        if(str == null || str.length() == 0)
            return &amp;quot;&amp;quot;;
        // record current longest length
        int maxLen = 0;
        String maxSubstr = &amp;quot;&amp;quot;;
        for (int i = 0; i &amp;lt; str.length(); i++) {
            // find the longest palindrome, when symmetry axis is the current index
            String case1 = expandFromCenter(str, i, i);
            // find the longest palindrome, when symmetry axis is between the current index and next index
            String case2 = expandFromCenter(str, i, i + 1);
            
            if (Math.max(case1.length(), case2.length()) &amp;gt; maxLen) {
                maxLen = Math.max(case1.length(), case2.length());
                maxSubstr = case1.length() &amp;gt; case2.length() ? case1 : case2;
            }
        }
        return maxSubstr;
    }

    private String expandFromCenter(String str, int left, int right) {
        // expand the left and right index two opposite sides
        while ( left &amp;gt;= 0
                &amp;amp;&amp;amp; right &amp;lt; str.length()&amp;amp;&amp;amp;str.charAt(left) == str.charAt(right)) {
            left--;
            right++;
        }
        return str.substring(left + 1, right);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;analysis&#34;&gt;Analysis&lt;/h2&gt;

&lt;p&gt;One pass from 0 - $$len \times 2$$; inside the loop the palindromic substring search also costs a loop from l - r; So the total is O($$n^2$$);&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Game of Life</title>
      <link>http://xmxiaohuilin.github.io/2015/11/19/game-of-life/</link>
      <pubDate>Thu, 19 Nov 2015 12:43:13 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/2015/11/19/game-of-life/</guid>
      <description>

&lt;p&gt;Given an array which represents a group of cells, their states are changing everyday according to some rule.&lt;/p&gt;

&lt;h2 id=&#34;problem-i&#34;&gt;Problem I&lt;/h2&gt;

&lt;p&gt;The following rules is for rule one:
- if the cell has the same numbers on its two sides, set it as &lt;code&gt;0&lt;/code&gt;;
- if the cell has the different numbers on its two sides, set it as &lt;code&gt;0&lt;/code&gt;;&lt;/p&gt;

&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cell: (0)[1, 0, 0, 0, 0, 1, 0, 0](0)
days1: [0, 1, 0, 0, 1, 0, 1, 0]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
	public static int[] daysChange (int[] cells, int day) {
		if (cells == null || cells.length &amp;lt;= 2) {
			return cells;
		}
		for(int i = 0; i &amp;lt; day; i++)
			changeHelper(cells);
		return cells;
	}

	/**
	* Modify on original array by the othse changing rules
	* @param cells array
	**/
	private static void changeHelper (int[] cells) {
		int prev = 0;
		for ( int i = 0 ; i &amp;lt; cells.length ; i++ ) {
			int tmp = cells[i];
			if(i == cells.length - 1) {
				cells[i] = prev ^ 0;
			} else {
				cells[i] = prev ^ cells[i+1];
			}
			prev = tmp;
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;problem-ii&#34;&gt;Problem II&lt;/h2&gt;

&lt;p&gt;According to the Wikipedia&amp;rsquo;s article:
&amp;gt; The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.&lt;/p&gt;

&lt;p&gt;Given a board with m by n cells, each cell has an initial state live (1) or dead (0). Each cell interacts with its eight neighbors (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Any live cell with fewer than two live neighbors dies, as if caused by under-population.&lt;/li&gt;
&lt;li&gt;Any live cell with two or three live neighbors lives on to the next generation.&lt;/li&gt;
&lt;li&gt;Any live cell with more than three live neighbors dies, as if by over-population..&lt;/li&gt;
&lt;li&gt;Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Write a function to compute the next state (after one update) of the board given its current state.&lt;/p&gt;

&lt;h3 id=&#34;follow-up&#34;&gt;Follow-up&lt;/h3&gt;

&lt;p&gt;Could you solve it in-place? Remember that the board needs to be updated at the same time: You cannot update some cells first and then use their updated values to update other cells.
In this question, we represent the board using a 2D array. In principle, the board is infinite, which would cause problems when the active area encroaches the border of the array. How would you address these problems?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Find a Path in Maze</title>
      <link>http://xmxiaohuilin.github.io/2015/11/19/find-a-path-in-maze/</link>
      <pubDate>Thu, 19 Nov 2015 12:33:13 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/2015/11/19/find-a-path-in-maze/</guid>
      <description>

&lt;p&gt;Find path in given 2D matrix. 3 states, &lt;code&gt;0&lt;/code&gt; means allow to go, &lt;code&gt;1&lt;/code&gt; means the obstacle, &lt;code&gt;9&lt;/code&gt; is the final, return true or false if the path exist from &lt;code&gt;(0,0)&lt;/code&gt; to any position contains &lt;code&gt;9&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
	/**
	 * DFS Implementation
	 * @param matrix as maze
	 * @param x start position
	 * @param y start position
	 * @return
	 */
	public static boolean findPath(int[][] matrix, int x, int y) {
		// output for edge cases
		if (matrix == null || matrix.length == 0 || matrix[0].length == 0
				|| matrix[x][y] == 1) {
			return false;
		}
		// the steps for x and y
		int[] sx = { 0, 0, -1, 1 };
		int[] sy = { 1, -1, 0, 0 };

		// if current position is &#39;9&#39;
		if (matrix[x][y] == 9)
			return true;
		// set current value to 1 avoid the duplicate visiting
		matrix[x][y] = 1;
		
		// dfs to try the path in matrix
		for (int i = 0; i &amp;lt; 4; i++) {
			int nx = x + sx[i];
			int ny = y + sy[i];
			if (nx &amp;gt;= 0 &amp;amp;&amp;amp; nx &amp;lt; matrix.length &amp;amp;&amp;amp; ny &amp;gt;= 0
					&amp;amp;&amp;amp; ny &amp;lt; matrix[nx].length &amp;amp;&amp;amp; matrix[nx][ny] != 1) {
				if (findPath(matrix, nx, ny))
					return true;
			}
		}
		return false;
	}

	/**
	 * BFS Implementation
	 * @param matrix as maze
	 * @param x start position
	 * @param y start position
	 * @return
	 */
	public static boolean findPathII(int[][] matrix, int x, int y) {
		if (matrix == null || matrix.length == 0 || matrix[0].length == 0
				|| matrix[x][y] == 1) {
			return false;
		}
		// the steps for x and y
		int[] sx = { 0, 0, -1, 1 };
		int[] sy = { 1, -1, 0, 0 };

		// setup a queue to do the bfs
		Queue&amp;lt;int[]&amp;gt; queue = new LinkedList&amp;lt;&amp;gt;();
		queue.offer(new int[] { x, y });
		matrix[x][y] = 1;
		while (!queue.isEmpty()) {
			int[] cur = queue.poll();
			if (matrix[cur[0]][cur[1]] == 9) 
				return true;
			
			matrix[cur[0]][cur[1]] = 1;
			for (int i = 0; i &amp;lt; 4; i++) {
				int nx = cur[0] + sx[i];
				int ny = cur[1] + sy[i];
				if (nx &amp;gt;= 0 &amp;amp;&amp;amp; nx &amp;lt; matrix.length &amp;amp;&amp;amp; ny &amp;gt;= 0
						&amp;amp;&amp;amp; ny &amp;lt; matrix[nx].length &amp;amp;&amp;amp; matrix[nx][ny] != 1) {
					queue.offer(new int[] { nx, ny });
					matrix[nx][ny] = 1;
				}
			}
		}
		return false;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;time-complexity&#34;&gt;Time Complexity&lt;/h2&gt;

&lt;p&gt;For DFS, it takes much space $O(m * n)$ since the recursion stack,  while the time complexity is $O(m * n)$. More specifically, the space complexity depends on the maze type and the step direction order.&lt;/p&gt;

&lt;p&gt;For BFS, it take less space, since every time the queue only store the valid neighbors according to current layer for a certain node. In matrix, the maximum layer size is the valid node number in diagonal. So the complexity is $O(\sqrt{n^2 + m^2})$. But the time complexity is the same as DFS with $O(m * n)$.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Find if Two Rectangles Overlap</title>
      <link>http://xmxiaohuilin.github.io/2015/11/19/find-if-two-rectangles-overlap/</link>
      <pubDate>Thu, 19 Nov 2015 12:33:13 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/2015/11/19/find-if-two-rectangles-overlap/</guid>
      <description>

&lt;p&gt;Given two rectangles, find if the given two rectangles overlap or not. Note that a rectangle can be represented by two coordinates, top left and bottom right. So mainly we are given following four coordinates.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;l1: Top Left coordinate of first rectangle.&lt;/li&gt;
&lt;li&gt;r1: Bottom Right coordinate of first rectangle.&lt;/li&gt;
&lt;li&gt;l2: Top Left coordinate of second rectangle.&lt;/li&gt;
&lt;li&gt;r2: Bottom Right coordinate of second rectangle.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
	public static boolean overlapping(Rectangle r1, Rectangle r2) {
		// edge case, if one of them is null
		if(r1 == null || r2 == null)
			return true;
		// If one rectangle is on left side of other
		if(r1.leftTop.x &amp;gt;= r2.rightBottom.x || r2.leftTop.x &amp;gt;= r1.rightBottom.x)
			return false;
		// If one rectangle is above other
		if(r1.leftTop.y &amp;lt;= r2.rightBottom.y || r2.leftTop.y &amp;lt;= r1.rightBottom.y)
			return false;
		return true;
	}

	static class Rectangle {
		Point leftTop, rightBottom;
		public Rectangle (int x1, int y1, int x2, int y2) {
			this.leftTop = new Point(x1, y1);
			this.rightBottom = new Point(x2, y2);
		}

		private class Point{
			int x;
			int y;
			public Point(int x, int y) {
				this.x = x;
				this.y = y;
			}
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Greatest Common Divisor</title>
      <link>http://xmxiaohuilin.github.io/2015/11/19/greatest-common-divisor/</link>
      <pubDate>Thu, 19 Nov 2015 12:33:13 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/2015/11/19/greatest-common-divisor/</guid>
      <description>

&lt;p&gt;Write a function to find Greatest Common Divisor of an array.&lt;/p&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
	public static int gcdArr(int[] arr) {
		if (arr == null || arr.length == 0)
			return 0;
		if (arr.length == 1)
			return arr[0];
		int res = gcd(arr[0], arr[1]);
		for (int i = 2; i &amp;lt; arr.length; i++) {
			if( arr[i] &amp;lt;= 0 || res == 0)
				return 0;
			res = gcd(res, arr[i]);
		}
		return res;
	}

	private static int gcd(int m, int n) {
		if (m &amp;lt;= 0 || n &amp;lt;= 0)
			return 0;
		
		if (n &amp;gt; m)
			return gcd(n, m);
		if (m % n == 0)
			return n;
		return gcd(n, m % n);
	}
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find Minimum Value Sum of Path</title>
      <link>http://xmxiaohuilin.github.io/2015/11/19/find-minimum-value-sum-of-path/</link>
      <pubDate>Thu, 19 Nov 2015 10:23:13 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/2015/11/19/find-minimum-value-sum-of-path/</guid>
      <description>

&lt;p&gt;Given a binary tree, find a path has the minimum sum of node value.&lt;/p&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
	public static int minPath(TreeNode root) {
		if (root == null)
			return 0;
		if (root.left == null &amp;amp;&amp;amp; root.right == null)
			return root.val;
		if (root.left == null)
			return root.val + minPath(root.right);
		if (root.right == null)
			return root.val + minPath(root.left);
		return root.val + Math.min(minPath(root.left), minPath(root.right));
	}
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Amplitude of Tree</title>
      <link>http://xmxiaohuilin.github.io/2015/11/18/amplitude-of-tree/</link>
      <pubDate>Wed, 18 Nov 2015 22:43:13 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/2015/11/18/amplitude-of-tree/</guid>
      <description>

&lt;p&gt;Given a tree of N nodes, return the amplitude of the tree. In a binary tree T, a path P is a non-empty sequence of nodes of tree such that, each consecutive node in the sequence is a subtree of its preceding node. In the example tree, the sequences &lt;code&gt;[9, 8, 2]&lt;/code&gt; and &lt;code&gt;[5, 8, 12]&lt;/code&gt; are two paths, while &lt;code&gt;[12, 8, 2]&lt;/code&gt; is not. The amplitude of path P is the maximum difference among values of nodes on path P. The amplitude of tree T is the maximum amplitude of all paths in T. When the tree is empty, it contains no path, and its amplitude is treated as 0.&lt;/p&gt;

&lt;h3 id=&#34;exmaple&#34;&gt;Exmaple&lt;/h3&gt;

&lt;p&gt;Input:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;         5
       /   \
    8        9
   /  \     /  \ 
  12   2   8    4
          /    /
        2    5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output: &lt;code&gt;7&lt;/code&gt; since there are paths &lt;code&gt;[5, 8, 12]&lt;/code&gt; and &lt;code&gt;[9, 8, 2]&lt;/code&gt; have the maximum amplitude &lt;code&gt;7&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;think&#34;&gt;Think&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Recursion, record the max value and min value a certain path.&lt;/li&gt;
&lt;li&gt;And recursively check each node on the path to that leaf and there differences.&lt;/li&gt;
&lt;li&gt;Set a global variable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
    public static int treeAmplitude(TreeNode root) {
        if (root == null)
            return 0;
        // setup an array to record [0] minimum in a certain path,
        // [1] maximum in a certain path, [2] the global maximum difference in
        // tree
        int[] mx = new int[1];
        List&amp;lt;Integer&amp;gt; list = new ArrayList&amp;lt;&amp;gt;();
        list.add(Integer.MIN_VALUE);
        list.add(Integer.MAX_VALUE);
        recursionHelper(root, list, mx);
        return mx[0];
    }

    /**
     * @param node
     *            - current root node in tree
     * @param prev
     *            - record the minimum and maximum value in current path
     * @param mx
     *            - record global maximum amplitude
     **/
    private static void recursionHelper(TreeNode node, List&amp;lt;Integer&amp;gt; prev,
            int[] mx) {
        // update the min or max in current path
        List&amp;lt;Integer&amp;gt; list = new ArrayList&amp;lt;&amp;gt;();
        list.add(Math.max(prev.get(0), node.val));
        list.add(Math.min(prev.get(1), node.val));
        // once find the leaf node terminate the recursion
        // and caculate current amplitude in this path
        if (node.left == null &amp;amp;&amp;amp; node.right == null) {
            int diff = list.get(0) - list.get(1);
            mx[0] = Math.max(mx[0], diff);
            return;
        }
        // check each child node if existed
        if (node.left != null)
            recursionHelper(node.left, list, mx);
        if (node.right != null)
            recursionHelper(node.right, list, mx);
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>