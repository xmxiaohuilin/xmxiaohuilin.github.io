<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pattern Match on Cindy&#39;s Blog</title>
    <link>http://xmxiaohuilin.github.io/tags/pattern-match/</link>
    <description>Recent content in Pattern Match on Cindy&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>(c) 2015 Cindy Lin.</copyright>
    <lastBuildDate>Thu, 08 Oct 2015 22:10:29 -0700</lastBuildDate>
    <atom:link href="http://xmxiaohuilin.github.io/tags/pattern-match/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Word Pattern</title>
      <link>http://xmxiaohuilin.github.io/2015/10/08/word-pattern/</link>
      <pubDate>Thu, 08 Oct 2015 22:10:29 -0700</pubDate>
      
      <guid>http://xmxiaohuilin.github.io/2015/10/08/word-pattern/</guid>
      <description>

&lt;p&gt;Given a pattern and a string str, find if str follows the same pattern.&lt;/p&gt;

&lt;p&gt;Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.&lt;/p&gt;

&lt;h3 id=&#34;examples&#34;&gt;Examples:&lt;/h3&gt;

&lt;p&gt;pattern = &lt;code&gt;abba&lt;/code&gt;, str = &lt;code&gt;dog cat cat dog&lt;/code&gt; should return true.
pattern = &lt;code&gt;abba&lt;/code&gt;, str = &lt;code&gt;dog cat cat fish&lt;/code&gt; should return false.
pattern = &lt;code&gt;aaaa&lt;/code&gt;, str = &lt;code&gt;dog cat cat dog&lt;/code&gt; should return false.
pattern = &lt;code&gt;abba&lt;/code&gt;, str = &lt;code&gt;dog dog dog dog&lt;/code&gt; should return false.&lt;/p&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes:&lt;/h3&gt;

&lt;p&gt;You may assume pattern contains only lowercase letters, and str contains lowercase letters separated by a single space.&lt;/p&gt;

&lt;h2 id=&#34;solutioin&#34;&gt;Solutioin&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Firstly, you need to convert &lt;code&gt;str&lt;/code&gt; into string array with spliting by space.&lt;/li&gt;
&lt;li&gt;Check two stuffs are equal length, if not? directly return false!&lt;/li&gt;
&lt;li&gt;Setup a hashmap for storing element both pattern and strs. However, the key are different types: character, string. Why not just use string? Consider about this case: pattern - &lt;code&gt;abba&lt;/code&gt;, str - &lt;code&gt;a a b a&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;There is one more tricky thing: why we compare the &lt;code&gt;map.put()&lt;/code&gt; return value? Here is a segment in HashMap API.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt; 	if (e != null) { // existing mapping for key
        V oldValue = e.value;
        if (!onlyIfAbsent || oldValue == null)
            e.value = value;
            afterNodeAccess(e);
            return oldValue;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;That means the previous index(value) of character(key) will be returned as index reference. So we return the previous index and also update the index for next index reference!&lt;/li&gt;
&lt;li&gt;So if the reference index not matched for current index, it should return false.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;public class Solution {
    public boolean wordPattern(String pattern, String str) {
        String[] strs = str.split(&amp;quot; &amp;quot;);
        if(strs.length != pattern.length())
            return false;
        Map&amp;lt;Object, Integer&amp;gt; map = new HashMap&amp;lt;&amp;gt;();
        for(int i = 0; i &amp;lt; strs.length; i++) {
            if(!Objects.equals(map.put(pattern.charAt(i), i), map.put(strs[i], i)))
                return false;
        }
        return true;
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>